buildscript {
    repositories {
        jcenter()
    }
}

apply plugin: 'com.android.application'
// -------QC-------
// apply plugin: 'com.neenbedankt.android-apt'
apply plugin: 'net.ltgt.apt'
apply from: '../config/quality.gradle'
apply plugin: 'spoon'
// -------QC-------

repositories {
    jcenter()

    flatDir {
        dirs 'libs'
    }
}

dependencies {
    // dependencies for app building

    compile project(':android-about-page')

    compile fileTree(dir: 'libs', include: '*.jar')
    compile project(':android-support-v7-appcompat')
    compile project(':android-support-annotations')
    compile project(':android-support-vector-drawable')

    // androidTestCompile 'com.android.support.test.espresso:espresso-core:2.2.1'

}

task deleteStuff(type: Delete) {
    logging.captureStandardOutput LogLevel.INFO

    def sysprops = System.getProperties()
    if (sysprops['idea.platform.prefix'] != null) {

        println 'deleteStuff on Android Studio Build'
        println new File(".").absolutePath

        FileTree tree1 = fileTree(dir: "nativelibs/armeabi");
        tree1.each {
            File file ->
                delete(file)
        }

        FileTree tree2 = fileTree(dir: "nativelibs/armeabi-v7a");
        tree2.each {
            File file ->
                delete(file)
        }

        FileTree tree3 = fileTree(dir: "nativelibs/x86");
        tree3.each {
            File file ->
                delete(file)
        }

    }
    else
    {
        println 'not on Android Studio'
    }
}

android {
    compileSdkVersion 24
    buildToolsVersion "24.0.2"

    compileOptions.encoding = 'UTF-8'

    defaultConfig {
        minSdkVersion 9
        targetSdkVersion 23

        jackOptions {
            enabled true
        }

        vectorDrawables.useSupportLibrary = true
        // generatedDensities = []

        externalNativeBuild {
            def sysprops = System.getProperties()
            if (sysprops['idea.platform.prefix'] != null) {
                cmake {
                    abiFilters 'armeabi' //,'x86'
                }
            }
        }

        ndk {
            def sysprops = System.getProperties()
            if (sysprops['idea.platform.prefix'] != null) {
                // Specifies the ABI configurations of your native
                // libraries Gradle should build and package with your APK.
                abiFilters 'armeabi' //, 'x86'
            }
        }

    }

    aaptOptions {
        additionalParameters "--no-version-vectors"
    }


    dexOptions {
        javaMaxHeapSize "2.2g"
    }

    sourceSets {
        main {
            manifest.srcFile 'AndroidManifest.xml'
            java.srcDirs = ['src']
            resources.srcDirs = ['src']
            aidl.srcDirs = ['src', 'aidl']
            renderscript.srcDirs = ['src']
            res.srcDirs = ['res']
            assets.srcDirs = ['assets']
            jniLibs.srcDirs = ['nativelibs']
        }
    }

    compileOptions {
        encoding "UTF-8"
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    lintOptions {
        abortOnError false
    }

    externalNativeBuild {

        def sysprops = System.getProperties()
        if (sysprops['idea.platform.prefix'] != null) {
            // Built from AndroidStudio
            cmake {
                path '../../CMakeLists.txt'
            }
        } else {
            // Built from command line
        }
    }


    packagingOptions {
        exclude 'META-INF/LICENSE.txt'
// -------QC-------
        exclude 'LICENSE.txt'
        exclude 'META-INF/NOTICE.txt'
        exclude 'META-INF/ASL2.0'
        exclude 'META-INF/LICENSE'
        exclude 'META-INF/NOTICE'
// -------QC-------
    }

}


